USE [GD1C2020]
GO

-------------------------------SE CREA EL ESQUEMA---------------------------------


if(not exists(select * from INFORMATION_SCHEMA.SCHEMATA where SCHEMA_NAME = 'NAME_IS_NULL'))
  begin
      exec ('CREATE SCHEMA[NAME_IS_NULL] AUTHORIZATION [GD1C2020]');
      print 'esquema creado';
    end

----------------------------CREAR TABLAS BASE DE DATOS----------------------------

-- ESTADIA
IF OBJECT_ID ('NAME_IS_NULL.ESTADIA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.ESTADIA; 
GO
CREATE TABLE NAME_IS_NULL.ESTADIA (
ESTADIA_CODIGO DECIMAL(18,0),
ESTADIA_FECHA_INIC DATETIME2(3) NOT NULL,
ESTADIA_CANT_NOCHES DECIMAL(18,0) NOT NULL,
HABITACION_NUMERO DECIMAL(18,0) NOT NULL,
HOTEL_CODIGO INT NOT NULL,
PRIMARY KEY(ESTADIA_CODIGO)
);

-- PASAJE
IF OBJECT_ID ('NAME_IS_NULL.PASAJE', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.PASAJE; 
GO
CREATE TABLE NAME_IS_NULL.PASAJE (
PASAJE_CODIGO DECIMAL(18,0),
BUTACA_NUMERO DECIMAL(18,0) NOT NULL,
BUTACA_TIPO NVARCHAR(255) NOT NULL,
VUELO_CODIGO DECIMAL(19,0) NOT NULL,
CHECK (BUTACA_NUMERO BETWEEN 0 AND 50),
PRIMARY KEY(PASAJE_CODIGO)
);

-- HABITACION
IF OBJECT_ID ('NAME_IS_NULL.HABITACION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.HABITACION; 
GO
CREATE TABLE NAME_IS_NULL.HABITACION (
HABITACION_NUMERO DECIMAL(18,0),
HOTEL_CODIGO INT,
HABITACION_PISO DECIMAL(18,0) NOT NULL,
HABITACION_FRENTE NVARCHAR(50) NOT NULL,
TIPO_HABITACION_CODIGO DECIMAL(18,0) NOT NULL,
PRIMARY KEY (HABITACION_NUMERO, HOTEL_CODIGO)
);

-- HOTEL
IF OBJECT_ID ('NAME_IS_NULL.HOTEL', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.HOTEL; 
GO
CREATE TABLE NAME_IS_NULL.HOTEL(
HOTEL_CODIGO INT IDENTITY(1,1),
HOTEL_NOMBRE NVARCHAR(255) NOT NULL,
HOTEL_CALLE NVARCHAR(255) NOT NULL,
HOTEL_NRO_CALLE DECIMAL(18,0) NOT NULL,
HOTEL_CANT_ESTRELLAS DECIMAL(18,0) NOT NULL,
PRIMARY KEY(HOTEL_CODIGO)
);

-- TIPO_HABITACION
IF OBJECT_ID ('NAME_IS_NULL.TIPO_HABITACION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.TIPO_HABITACION; 
GO
CREATE TABLE NAME_IS_NULL.TIPO_HABITACION (
TIPO_HABITACION_CODIGO DECIMAL(18,0),
TIPO_HABITACION_DESC NVARCHAR(50) NOT NULL,
PRIMARY KEY(TIPO_HABITACION_CODIGO)
);

-- FACTURA
IF OBJECT_ID ('NAME_IS_NULL.FACTURA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.FACTURA; 
GO
CREATE TABLE NAME_IS_NULL.FACTURA (
FACTURA_NUMERO DECIMAL(18,0),
FACTURA_FECHA DATETIME2(3) NOT NULL,
FACTURA_PRECIO DECIMAL(18,2) NOT NULL,
CLIENTE_ID INT NOT NULL,
SUCURSAL_MAIL NVARCHAR(255) NOT NULL,
PASAJE_CODIGO DECIMAL(18,0),
ESTADIA_CODIGO DECIMAL(18,0),
CHECK ((PASAJE_CODIGO IS NOT NULL AND ESTADIA_CODIGO IS NULL)
    OR (ESTADIA_CODIGO IS NOT NULL AND PASAJE_CODIGO IS NULL)),
PRIMARY KEY(FACTURA_NUMERO)
);

-- SUCURSAL
IF OBJECT_ID ('NAME_IS_NULL.SUCURSAL', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.SUCURSAL; 
GO
CREATE TABLE NAME_IS_NULL.SUCURSAL (
SUCURSAL_MAIL NVARCHAR(255),
SUCURSAL_DIRECCION NVARCHAR(255) NOT NULL,
SUCURSAL_TELEFONO DECIMAL(18,0) NOT NULL,
PRIMARY KEY(SUCURSAL_MAIL)
);

-- CLIENTE
IF OBJECT_ID ('NAME_IS_NULL.CLIENTE', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.CLIENTE; 
GO
CREATE TABLE NAME_IS_NULL.CLIENTE (
CLIENTE_ID INT IDENTITY(1,1),
CLIENTE_DNI DECIMAL(18,0) NOT NULL,
CLIENTE_NOMBRE NVARCHAR(255) NOT NULL,
CLIENTE_APELLIDO NVARCHAR(255) NOT NULL,
CLIENTE_FECHA_NAC DATETIME2(3) NOT NULL,
CLIENTE_MAIL NVARCHAR(255) NOT NULL,
CLIENTE_TELEFONO INT NOT NULL, 
PRIMARY KEY(CLIENTE_ID)
);

-- BUTACA
IF OBJECT_ID ('NAME_IS_NULL.BUTACA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.BUTACA; 
GO
CREATE TABLE NAME_IS_NULL.BUTACA (
VUELO_CODIGO DECIMAL(19,0),
BUTACA_NUMERO DECIMAL(18,0),
BUTACA_TIPO NVARCHAR(255) NOT NULL,
PRIMARY KEY (BUTACA_NUMERO, VUELO_CODIGO, BUTACA_TIPO)
);

-- VUELO
IF OBJECT_ID ('NAME_IS_NULL.VUELO', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.VUELO; 
GO
CREATE TABLE NAME_IS_NULL.VUELO (
VUELO_CODIGO DECIMAL(19,0),
VUELO_FECHA_SALIDA DATETIME2(3) NOT NULL,
VUELO_FECHA_LLEGADA DATETIME2(3) NOT NULL,
AVION_IDENTIFICADOR NVARCHAR(50) NOT NULL,
RUTA_AEREA_ID INT NOT NULL,
AEROLINEA_CODIGO INT NOT NULL,
PRIMARY KEY(VUELO_CODIGO),
);

-- RUTA_AEREA
IF OBJECT_ID ('NAME_IS_NULL.RUTA_AEREA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.RUTA_AEREA; 
GO
CREATE TABLE NAME_IS_NULL.RUTA_AEREA (
RUTA_AEREA_ID INT IDENTITY(1,1),
RUTA_AEREA_CODIGO DECIMAL(18,0),
RUTA_AEREA_CIUD_ORIGEN NVARCHAR(255) NOT NULL,
RUTA_AEREA_CIUD_DESTINO NVARCHAR(255) NOT NULL,
PRIMARY KEY(RUTA_AEREA_ID)
);

-- AVION
IF OBJECT_ID ('NAME_IS_NULL.AVION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.AVION;
GO
CREATE TABLE NAME_IS_NULL.AVION (
AVION_IDENTIFICADOR NVARCHAR(50),
AVION_MODELO NVARCHAR(50) NOT NULL,
PRIMARY KEY(AVION_IDENTIFICADOR)
);

-- ITEM
IF OBJECT_ID ('NAME_IS_NULL.ITEM', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.ITEM; 
GO
CREATE TABLE NAME_IS_NULL.ITEM (
ITEM_NUMERO INT IDENTITY(1,1),
COMPRA_NUMERO DECIMAL(18,0),
PASAJE_CODIGO DECIMAL(18,0),
ESTADIA_CODIGO DECIMAL(18,0),
ITEM_COSTO DECIMAL(18,2) NOT NULL,
CHECK ((PASAJE_CODIGO IS NOT NULL AND ESTADIA_CODIGO IS NULL)
    OR (ESTADIA_CODIGO IS NOT NULL AND PASAJE_CODIGO IS NULL)),
PRIMARY KEY (ITEM_NUMERO)
);

-- AEROLINEA
IF OBJECT_ID ('NAME_IS_NULL.AEROLINEA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.AEROLINEA; 
GO
CREATE TABLE NAME_IS_NULL.AEROLINEA (
AEROLINEA_CODIGO INT IDENTITY(1,1),
AEROLINEA_NOMBRE NVARCHAR(255) NOT NULL, -- empresa
PRIMARY KEY(AEROLINEA_CODIGO)
);

-- COMPRA
IF OBJECT_ID ('NAME_IS_NULL.COMPRA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.COMPRA; 
GO
CREATE TABLE NAME_IS_NULL.COMPRA (
COMPRA_NUMERO DECIMAL(18,0),
COMPRA_FECHA DATETIME2(3) NOT NULL,
PRIMARY KEY(COMPRA_NUMERO)
);

----------------------------------------------------------------------------

-----------------MIGRACION AVION----------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionAvion', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionAvion; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionAvion AS
BEGIN
	INSERT INTO NAME_IS_NULL.AVION
		SELECT DISTINCT AVION_IDENTIFICADOR, AVION_MODELO
		FROM gd_esquema.maestra
		WHERE AVION_MODELO IS NOT NULL
END;
GO

---------------MIGRACION RUTA AEREA--------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionRutaAerea', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionRutaAerea; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionRutaAerea AS
BEGIN
	INSERT INTO NAME_IS_NULL.RUTA_AEREA
		SELECT DISTINCT RUTA_AEREA_CODIGO, RUTA_AEREA_CIU_ORIG, RUTA_AEREA_CIU_DEST
		FROM gd_esquema.Maestra
		WHERE RUTA_AEREA_CODIGO IS NOT NULL
END;
GO

---------------MIGRACION AEROLINEA--------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionAerolinea', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionAerolinea; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionAerolinea AS
BEGIN
	INSERT INTO NAME_IS_NULL.AEROLINEA
		SELECT DISTINCT EMPRESA_RAZON_SOCIAL
		FROM gd_esquema.Maestra
		WHERE EMPRESA_RAZON_SOCIAL IS NOT NULL AND 
			  VUELO_CODIGO IS NOT NULL
END;
GO

----------------MIGRACION SUCURSAL---------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionSucursal', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionSucursal; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionSucursal AS
BEGIN
	INSERT INTO NAME_IS_NULL.SUCURSAL
		SELECT DISTINCT SUCURSAL_MAIL, SUCURSAL_DIR, SUCURSAL_TELEFONO 
		FROM gd_esquema.Maestra
		WHERE SUCURSAL_MAIL IS NOT NULL
		ORDER BY SUCURSAL_MAIL
END;
GO

------------MIGRACION TIPO HABITACION-----------------
IF OBJECT_ID ('NAME_IS_NULL.migracionTipoHabitacion', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionTipoHabitacion; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionTipoHabitacion AS
BEGIN
	INSERT INTO NAME_IS_NULL.TIPO_HABITACION
		SELECT DISTINCT TIPO_HABITACION_CODIGO, TIPO_HABITACION_DESC
		FROM gd_esquema.Maestra
		WHERE TIPO_HABITACION_CODIGO IS NOT NULL
END;
GO

-----------------MIGRACION HOTEL----------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionHotel', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionHotel; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionHotel AS
BEGIN
	INSERT INTO NAME_IS_NULL.HOTEL
		SELECT DISTINCT EMPRESA_RAZON_SOCIAL, HOTEL_CALLE, HOTEL_NRO_CALLE, HOTEL_CANTIDAD_ESTRELLAS
		FROM gd_esquema.Maestra
		WHERE EMPRESA_RAZON_SOCIAL IS NOT NULL AND 
			  HOTEL_CALLE IS NOT NULL
		ORDER BY EMPRESA_RAZON_SOCIAL DESC
END;
GO

----------------MIGRACION VUELO---------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionVuelo', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionVuelo; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionVuelo AS
BEGIN
	INSERT INTO NAME_IS_NULL.VUELO
		SELECT DISTINCT db.VUELO_CODIGO, db.VUELO_FECHA_SALUDA, db.VUELO_FECHA_LLEGADA,
						db.AVION_IDENTIFICADOR, ra.RUTA_AEREA_ID, a.AEROLINEA_CODIGO
		FROM gd_esquema.Maestra db JOIN NAME_IS_NULL.RUTA_AEREA ra 
										ON ((db.RUTA_AEREA_CIU_ORIG = ra.RUTA_AEREA_CIUD_ORIGEN) AND 
											(db.RUTA_AEREA_CIU_DEST = ra.RUTA_AEREA_CIUD_DESTINO))
									JOIN NAME_IS_NULL.AEROLINEA a
										ON (db.EMPRESA_RAZON_SOCIAL = a.AEROLINEA_NOMBRE)
		WHERE VUELO_CODIGO IS NOT NULL AND FACTURA_NRO IS NULL
END;
GO

----------------MIGRACION BUTACA---------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionButaca', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionButaca; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionButaca AS
BEGIN
	INSERT INTO NAME_IS_NULL.BUTACA
		SELECT DISTINCT VUELO_CODIGO, BUTACA_NUMERO, BUTACA_TIPO
		FROM gd_esquema.Maestra 
		WHERE VUELO_CODIGO IS NOT NULL AND FACTURA_NRO IS NULL
END;
GO

----------------MIGRACION COMPRA---------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionCompra', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionCompra; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionCompra AS
BEGIN
	INSERT INTO NAME_IS_NULL.COMPRA
		SELECT DISTINCT COMPRA_NUMERO, COMPRA_FECHA
		FROM gd_esquema.Maestra 
		WHERE COMPRA_NUMERO IS NOT NULL
END;
GO

----------------MIGRACION ITEM--------------------- 
IF OBJECT_ID ('NAME_IS_NULL.migracionItem', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionItem; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionItem AS
BEGIN
	INSERT INTO NAME_IS_NULL.ITEM
		--SELECCIONO LOS ITEM:ESTADIA
		SELECT DISTINCT COMPRA_NUMERO, PASAJE_CODIGO, NULL ESTADIA_CODIGO, PASAJE_COSTO
		FROM gd_esquema.Maestra 
		WHERE COMPRA_NUMERO IS NOT NULL AND PASAJE_CODIGO IS NOT NULL
		UNION--UNO AMBOS ITEMS EN UNA SOLA LISTA
		--SELECCIONO LOS ITEM:PASAJE
		SELECT DISTINCT COMPRA_NUMERO, NULL PASAJE_CODIGO, ESTADIA_CODIGO, HABITACION_COSTO
		FROM gd_esquema.Maestra 
		WHERE COMPRA_NUMERO IS NOT NULL AND ESTADIA_CODIGO IS NOT NULL
END;
GO

----------------MIGRACION CLIENTE---------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionCliente', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionCliente;
GO
CREATE PROCEDURE NAME_IS_NULL.migracionCliente AS
BEGIN
	INSERT INTO NAME_IS_NULL.CLIENTE
		SELECT DISTINCT CLIENTE_DNI, CLIENTE_NOMBRE, CLIENTE_APELLIDO,
						CLIENTE_FECHA_NAC, CLIENTE_MAIL, CLIENTE_TELEFONO
		FROM gd_esquema.Maestra 
		WHERE CLIENTE_DNI IS NOT NULL
		ORDER BY CLIENTE_APELLIDO, CLIENTE_NOMBRE
END;
GO

----------------MIGRACION PASAJE--------------------- 
IF OBJECT_ID ('NAME_IS_NULL.migracionPasaje', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionPasaje; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionPasaje AS
BEGIN
	INSERT INTO NAME_IS_NULL.PASAJE
		SELECT DISTINCT PASAJE_CODIGO, BUTACA_NUMERO, BUTACA_TIPO, VUELO_CODIGO
		FROM gd_esquema.Maestra 
		WHERE PASAJE_CODIGO IS NOT NULL and FACTURA_NRO IS NULL
END;
GO

------------------MIGRACION HABITACION-----------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionHabitacion', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionHabitacion; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionHabitacion AS
BEGIN
	INSERT INTO NAME_IS_NULL.HABITACION
		SELECT DISTINCT db.HABITACION_NUMERO, h.HOTEL_CODIGO, HABITACION_PISO, HABITACION_FRENTE, TIPO_HABITACION_CODIGO
		FROM gd_esquema.Maestra db JOIN NAME_IS_NULL.HOTEL h 
										ON ((h.HOTEL_CALLE = db.HOTEL_CALLE) 
											AND (h.HOTEL_NRO_CALLE = db.HOTEL_NRO_CALLE))
		WHERE HABITACION_NUMERO IS NOT NULL AND FACTURA_NRO IS NULL
END;
GO

-------------------MIGRACION ESTADIA------------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionEstadia', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionEstadia; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionEstadia AS
BEGIN
	INSERT INTO NAME_IS_NULL.ESTADIA
		SELECT DISTINCT db.ESTADIA_CODIGO, db.ESTADIA_FECHA_INI, db.ESTADIA_CANTIDAD_NOCHES,
		db.HABITACION_NUMERO, h.HOTEL_CODIGO
		FROM gd_esquema.Maestra db JOIN NAME_IS_NULL.HOTEL h
										ON ((h.HOTEL_CALLE = db.HOTEL_CALLE) 
											AND (h.HOTEL_NRO_CALLE = db.HOTEL_NRO_CALLE))
		WHERE ESTADIA_CODIGO IS NOT NULL AND FACTURA_NRO IS NULL
END;
GO

-------------------MIGRACION FACTURA------------------------
IF OBJECT_ID ('NAME_IS_NULL.migracionFactura', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migracionFactura; 
GO
CREATE PROCEDURE NAME_IS_NULL.migracionFactura AS
BEGIN
	INSERT INTO NAME_IS_NULL.FACTURA
		--BUSCO SOLO LAS FACTURAS PARA ESTADIAS
		SELECT DISTINCT FACTURA_NRO, FACTURA_FECHA, (HABITACION_PRECIO) FACTURA_PRECIO, c.CLIENTE_ID, SUCURSAL_MAIL, (NULL) PASAJE_CODIGO, ESTADIA_CODIGO 
		FROM gd_esquema.Maestra db JOIN NAME_IS_NULL.CLIENTE c ON (c.CLIENTE_DNI = db.CLIENTE_DNI) AND (c.CLIENTE_NOMBRE = db.CLIENTE_NOMBRE) AND (c.CLIENTE_APELLIDO = db.CLIENTE_APELLIDO)
		WHERE ESTADIA_CODIGO IS NOT NULL AND FACTURA_NRO IS NOT NULL
		UNION --UNO AMBOS TIPOS DE FACTURAS
		--BUSCO SOLO LAS FACTURAS PARA PASAJES
		SELECT DISTINCT FACTURA_NRO, FACTURA_FECHA, (PASAJE_PRECIO) FACTURA_PRECIO, c.CLIENTE_ID, SUCURSAL_MAIL, PASAJE_CODIGO, (NULL) ESTADIA_CODIGO
		FROM gd_esquema.Maestra db JOIN NAME_IS_NULL.CLIENTE c ON (c.CLIENTE_DNI = db.CLIENTE_DNI) AND (c.CLIENTE_NOMBRE = db.CLIENTE_NOMBRE) AND (c.CLIENTE_APELLIDO = db.CLIENTE_APELLIDO)
		WHERE VUELO_CODIGO IS NOT NULL AND FACTURA_NRO IS NOT NULL
END;
GO

-------------------MIGRAR TODA LA BASE DE DATOS-------------------------
IF OBJECT_ID ('NAME_IS_NULL.migrarBaseDeDatos', 'P') IS NOT NULL  
   DROP PROCEDURE NAME_IS_NULL.migrarBaseDeDatos; 
GO
CREATE PROCEDURE NAME_IS_NULL.migrarBaseDeDatos AS
BEGIN
	EXEC NAME_IS_NULL.migracionAvion
	EXEC NAME_IS_NULL.migracionRutaAerea
	EXEC NAME_IS_NULL.migracionAerolinea
	EXEC NAME_IS_NULL.migracionVuelo
	EXEC NAME_IS_NULL.migracionButaca
	EXEC NAME_IS_NULL.migracionCompra
	EXEC NAME_IS_NULL.migracionItem
	EXEC NAME_IS_NULL.migracionCliente
	EXEC NAME_IS_NULL.migracionSucursal
	EXEC NAME_IS_NULL.migracionFactura
	EXEC NAME_IS_NULL.migracionPasaje
	EXEC NAME_IS_NULL.migracionHotel
	EXEC NAME_IS_NULL.migracionTipoHabitacion
	EXEC NAME_IS_NULL.migracionHabitacion
	EXEC NAME_IS_NULL.migracionEstadia
END;
GO

exec NAME_IS_NULL.migrarBaseDeDatos

--FK tabla VUELO
ALTER TABLE NAME_IS_NULL.VUELO
ADD CONSTRAINT FK_VUELO
FOREIGN KEY (AVION_IDENTIFICADOR) REFERENCES NAME_IS_NULL.AVION,
FOREIGN KEY (RUTA_AEREA_ID) REFERENCES NAME_IS_NULL.RUTA_AEREA,
FOREIGN KEY (AEROLINEA_CODIGO) REFERENCES NAME_IS_NULL.AEROLINEA;

--FK tabla BUTACA
ALTER TABLE NAME_IS_NULL.BUTACA
ADD CONSTRAINT FK_BUTACA
FOREIGN KEY (VUELO_CODIGO) REFERENCES NAME_IS_NULL.VUELO;

--FK tabla ITEM
ALTER TABLE NAME_IS_NULL.ITEM
ADD CONSTRAINT FK_ITEM
FOREIGN KEY (COMPRA_NUMERO) REFERENCES NAME_IS_NULL.COMPRA;

--FK tabla FACTURA
ALTER TABLE NAME_IS_NULL.FACTURA
ADD CONSTRAINT FK_FACTURA
FOREIGN KEY (CLIENTE_ID) REFERENCES NAME_IS_NULL.CLIENTE,
FOREIGN KEY (SUCURSAL_MAIL) REFERENCES NAME_IS_NULL.SUCURSAL;

--FK tabla PASAJE
ALTER TABLE NAME_IS_NULL.PASAJE
ADD CONSTRAINT FK_PASAJE
FOREIGN KEY(BUTACA_NUMERO, VUELO_CODIGO, BUTACA_TIPO) REFERENCES NAME_IS_NULL.BUTACA;

--FK tabla HABITACION
ALTER TABLE NAME_IS_NULL.HABITACION
ADD CONSTRAINT FK_HABITACION
FOREIGN KEY (TIPO_HABITACION_CODIGO) REFERENCES NAME_IS_NULL.TIPO_HABITACION,
FOREIGN KEY (HOTEL_CODIGO) REFERENCES NAME_IS_NULL.HOTEL;

--FK tabla ESTADIA
ALTER TABLE NAME_IS_NULL.ESTADIA
ADD CONSTRAINT FK_ESTADIA
FOREIGN KEY(HABITACION_NUMERO, HOTEL_CODIGO) REFERENCES NAME_IS_NULL.HABITACION;