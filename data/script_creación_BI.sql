USE [GD1C2020]
GO

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--FUNCIONES AUXILIARES

IF OBJECT_ID ('NAME_IS_NULL.FX_MES', 'FN') IS NOT NULL  
   DROP FUNCTION NAME_IS_NULL.FX_MES; 
GO

CREATE FUNCTION NAME_IS_NULL.FX_MES (@MES INT)
RETURNS CHAR(12)
AS
BEGIN
	DECLARE @NOMBRE_MES CHAR(12)
	
	SET @NOMBRE_MES = CASE
				WHEN @MES = 1 THEN 'Enero'
				WHEN @MES = 2 THEN 'Febrero'
				WHEN @MES = 3 THEN 'Marzo'
				WHEN @MES = 4 THEN 'Abril'
				WHEN @MES = 5 THEN 'Mayo'
				WHEN @MES = 6 THEN 'Junio'
				WHEN @MES = 7 THEN 'Julio'
				WHEN @MES = 8 THEN 'Agosto'
				WHEN @MES = 9 THEN 'Septiembre'
				WHEN @MES = 10 THEN 'Octubre'
				WHEN @MES = 11 THEN 'Noviembre'
				WHEN @MES = 12 THEN 'Diciembre'
	END
	RETURN @NOMBRE_MES
END; 
GO

IF OBJECT_ID ('NAME_IS_NULL.FACT_TABLE_ESTADIAS', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.FACT_TABLE_ESTADIAS; 
GO

IF OBJECT_ID ('NAME_IS_NULL.FACT_TABLE_PASAJES', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.FACT_TABLE_PASAJES; 
GO

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION FECHA FACTURACION

IF OBJECT_ID ('NAME_IS_NULL.D_FECHA_FACTURACION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_FECHA_FACTURACION; 
GO

CREATE TABLE NAME_IS_NULL.D_FECHA_FACTURACION (
ID_FACTURA_FECHA	DATETIME2(3),
ANIO				INT,
MES					CHAR(12),

PRIMARY KEY(ID_FACTURA_FECHA)
);

INSERT INTO NAME_IS_NULL.D_FECHA_FACTURACION
SELECT FACTURA_FECHA, DATEPART(YEAR, FACTURA_FECHA) ANIO, NAME_IS_NULL.FX_MES(DATEPART(MONTH, FACTURA_FECHA)) MES
FROM NAME_IS_NULL.FACTURA
GROUP BY FACTURA_FECHA
ORDER BY DATEPART(YEAR, FACTURA_FECHA), DATEPART(MONTH, FACTURA_FECHA)

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION FECHA COMPRA

IF OBJECT_ID ('NAME_IS_NULL.D_FECHA_COMPRA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_FECHA_COMPRA; 
GO

CREATE TABLE NAME_IS_NULL.D_FECHA_COMPRA (
ID_COMPRA_FECHA DATETIME2(3),
ANIO			INT,
MES				CHAR(12),

PRIMARY KEY(ID_COMPRA_FECHA)
);

INSERT INTO NAME_IS_NULL.D_FECHA_COMPRA
SELECT COMPRA_FECHA, DATEPART(YEAR, COMPRA_FECHA) ANIO, NAME_IS_NULL.FX_MES(DATEPART(MONTH, COMPRA_FECHA)) MES
FROM NAME_IS_NULL.COMPRA
GROUP BY COMPRA_FECHA
ORDER BY DATEPART(YEAR, COMPRA_FECHA), DATEPART(MONTH, COMPRA_FECHA)

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION CLIENTES 

IF OBJECT_ID ('NAME_IS_NULL.D_CLIENTE', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_CLIENTE; 
GO

CREATE TABLE NAME_IS_NULL.D_CLIENTE (
CLIENTE_ID			INT PRIMARY KEY,
CLIENTE_DNI			DECIMAL(18,0),
CLIENTE_NOMBRE		NVARCHAR(255),
CLIENTE_APELLIDO	NVARCHAR(255),
CLIENTE_FECHA_NAC	DATETIME2(3),
CLIENTE_MAIL		NVARCHAR(255),
CLIENTE_TELEFONO	INT,
CLIENTE_EDAD		INT
);

INSERT INTO NAME_IS_NULL.D_CLIENTE
SELECT DISTINCT CLIENTE_ID, CLIENTE_DNI, CLIENTE_NOMBRE, CLIENTE_APELLIDO,
			    CLIENTE_FECHA_NAC, CLIENTE_MAIL, CLIENTE_TELEFONO, 
				DATEDIFF(yy,CLIENTE_FECHA_NAC, GETDATE()) CLIENTE_EDAD
FROM NAME_IS_NULL.CLIENTE
GROUP BY CLIENTE_ID, CLIENTE_DNI, CLIENTE_DNI, CLIENTE_NOMBRE,
		 CLIENTE_APELLIDO, CLIENTE_FECHA_NAC, CLIENTE_MAIL, CLIENTE_TELEFONO,
		 DATEDIFF(yy,CLIENTE_FECHA_NAC, GETDATE())
ORDER BY 1

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION AVION

IF OBJECT_ID ('NAME_IS_NULL.D_AVION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_AVION; 

GO
CREATE TABLE NAME_IS_NULL.D_AVION(
AVION_IDENTIFICADOR NVARCHAR(50) PRIMARY KEY,
AVION_MODELO		NVARCHAR(50)
);

INSERT INTO NAME_IS_NULL.D_AVION
SELECT DISTINCT AVION_IDENTIFICADOR, AVION_MODELO AVION_MODELO
FROM NAME_IS_NULL.AVION
ORDER BY AVION_IDENTIFICADOR

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION PROVEEDORES

IF OBJECT_ID ('NAME_IS_NULL.D_PROVEEDOR', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_PROVEEDOR; 
GO

CREATE TABLE NAME_IS_NULL.D_PROVEEDOR(
PROVEEDOR_ID		INT IDENTITY PRIMARY KEY,
NOMBRE_PROVEEDOR	NVARCHAR(255),
TIPO_DE_SERVICIO	NVARCHAR(50)
);

INSERT INTO NAME_IS_NULL.D_PROVEEDOR
SELECT DISTINCT HOTEL_NOMBRE NOMBRE_PROVEEDOR, 'HOTELER√çA' AS TIPO_DE_SERVICIO
FROM NAME_IS_NULL.HOTEL
GROUP BY HOTEL_NOMBRE
UNION
SELECT DISTINCT AEROLINEA_NOMBRE NOMBRE_PROVEEDOR, 'AEROLINEA' AS TIPO_DE_SERVICIO
FROM NAME_IS_NULL.AEROLINEA
GROUP BY AEROLINEA_NOMBRE
ORDER BY NOMBRE_PROVEEDOR

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION RUTAS AEREAS

IF OBJECT_ID ('NAME_IS_NULL.D_RUTA_AEREA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_RUTA_AEREA; 

GO
CREATE TABLE NAME_IS_NULL.D_RUTA_AEREA (
RUTA_AEREA_ID			INT PRIMARY KEY,
RUTA_AEREA_CODIGO		DECIMAL(18,0),
RUTA_AEREA_CIU_ORIGEN	NVARCHAR(255),
RUTA_AEREA_CIU_DESTINO	NVARCHAR(255)
);

INSERT INTO NAME_IS_NULL.D_RUTA_AEREA
SELECT DISTINCT RUTA_AEREA_ID, RUTA_AEREA_CODIGO, RUTA_AEREA_CIUD_ORIGEN, RUTA_AEREA_CIUD_DESTINO
FROM NAME_IS_NULL.RUTA_AEREA
ORDER BY 1

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION SUCURSAL

IF OBJECT_ID ('NAME_IS_NULL.D_SUCURSAL', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_SUCURSAL; 

GO
CREATE TABLE NAME_IS_NULL.D_SUCURSAL(
SUCURSAL_ID			INT IDENTITY(1,1) PRIMARY KEY,
SUCURSAL_DIRECCION	NVARCHAR(255),
SUCURSAL_TELEFONO	DECIMAL (18,0),
SUCURSAL_MAIL		NVARCHAR(255),
)

INSERT INTO NAME_IS_NULL.D_SUCURSAL
SELECT DISTINCT SUCURSAL_DIRECCION, SUCURSAL_TELEFONO, SUCURSAL_MAIL
FROM NAME_IS_NULL.SUCURSAL

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION CIUDAD ENTRANTE (ARRIBOS)

IF OBJECT_ID ('NAME_IS_NULL.D_CIUDAD_ENTRANTE', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_CIUDAD_ENTRANTE; 
GO

CREATE TABLE NAME_IS_NULL.D_CIUDAD_ENTRANTE(
CIUDAD_ENTRANTE_ID		INT IDENTITY PRIMARY KEY,
CIUDAD_NOMBRE			VARCHAR(255),
CANTIDAD_VUELOS			INT,
CANTIDAD_RUTAS_AEREAS	INT
);

INSERT INTO NAME_IS_NULL.D_CIUDAD_ENTRANTE
SELECT DISTINCT R.RUTA_AEREA_CIUD_DESTINO, COUNT(V.RUTA_AEREA_ID) CANTIDAD_VUELOS,
(SELECT COUNT(R1.RUTA_AEREA_CIUD_DESTINO) 
 FROM NAME_IS_NULL.RUTA_AEREA R1
 WHERE R1.RUTA_AEREA_CIUD_DESTINO = R.RUTA_AEREA_CIUD_DESTINO) CANTIDAD_RUTAS_AEREAS
FROM NAME_IS_NULL.RUTA_AEREA R LEFT JOIN NAME_IS_NULL.VUELO V ON (R.RUTA_AEREA_ID = V.RUTA_AEREA_ID)
GROUP BY R.RUTA_AEREA_CIUD_DESTINO

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION CIUDAD SALIENTE (PARTIDAS)

IF OBJECT_ID ('NAME_IS_NULL.D_CIUDAD_SALIENTE', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_CIUDAD_SALIENTE; 
GO

CREATE TABLE NAME_IS_NULL.D_CIUDAD_SALIENTE(
CIUDAD_SALIENTE_ID		INT IDENTITY PRIMARY KEY,
CIUDAD_NOMBRE			VARCHAR(255),
CANTIDAD_VUELOS			INT,
CANTIDAD_RUTAS_AEREAS	INT
);

INSERT INTO NAME_IS_NULL.D_CIUDAD_SALIENTE
SELECT DISTINCT R.RUTA_AEREA_CIUD_ORIGEN, COUNT(V.RUTA_AEREA_ID) CANTIDAD_VUELOS, 
(SELECT COUNT(R1.RUTA_AEREA_CIUD_ORIGEN) 
 FROM NAME_IS_NULL.RUTA_AEREA R1 
 WHERE R1.RUTA_AEREA_CIUD_ORIGEN = R.RUTA_AEREA_CIUD_ORIGEN) CANTIDAD_RUTAS_AEREAS
FROM NAME_IS_NULL.RUTA_AEREA R LEFT JOIN NAME_IS_NULL.VUELO V ON (R.RUTA_AEREA_ID = V.RUTA_AEREA_ID)
GROUP BY R.RUTA_AEREA_CIUD_ORIGEN

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION TIPO DE BUTACA

IF OBJECT_ID ('NAME_IS_NULL.D_TIPO_DE_BUTACA', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_TIPO_DE_BUTACA; 
GO

CREATE TABLE NAME_IS_NULL.D_TIPO_DE_BUTACA(
ID_TIPO_DE_BUTACA	INT IDENTITY PRIMARY KEY,
BUTACA_TIPO			NVARCHAR(255),
CANTIDAD_BUTACAS	INT,
VUELO_CODIGO		DECIMAL(19,0)
);

INSERT INTO NAME_IS_NULL.D_TIPO_DE_BUTACA
SELECT BUTACA_TIPO, COUNT(BUTACA_NUMERO) CANTIDAD_BUTACAS, VUELO_CODIGO
FROM NAME_IS_NULL.BUTACA
GROUP BY BUTACA_TIPO, VUELO_CODIGO

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--DIMENSION TIPO DE HABITACION

IF OBJECT_ID ('NAME_IS_NULL.D_TIPO_DE_HABITACION', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.D_TIPO_DE_HABITACION; 
GO

CREATE TABLE NAME_IS_NULL.D_TIPO_DE_HABITACION(
TIPO_HABITACION_CODIGO		DECIMAL(18,0) PRIMARY KEY,
TIPO_HABITACION_DESCRIPCION NVARCHAR(50),
CANTIDAD_CAMAS				char(1)
);

INSERT INTO NAME_IS_NULL.D_TIPO_DE_HABITACION
SELECT DISTINCT TIPO_HABITACION_CODIGO, TIPO_HABITACION_DESC, 
SUBSTRING(CAST(TIPO_HABITACION_CODIGO AS VARCHAR(4)), 4, 1) CANTIDAD_CAMAS
FROM NAME_IS_NULL.TIPO_HABITACION

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--INICIO CREACION TABLA DE HECHOS ESTADIAS

IF OBJECT_ID ('NAME_IS_NULL.FACT_TABLE_ESTADIAS', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.FACT_TABLE_ESTADIAS; 
GO

CREATE TABLE NAME_IS_NULL.FACT_TABLE_ESTADIAS(
ID_COMPRA_FECHA			DATETIME2(3),
ID_FACTURA_FECHA		DATETIME2(3),
SUCURSAL_ID				INT,
TIPO_HABITACION_CODIGO	DECIMAL(18,0),
CLIENTE_ID				INT,
PROVEEDOR_ID			INT,
CANTIDAD_COMPRADO		INT,
MONTO_TOTAL_COMPRADO	decimal (18,2),
CANTIDAD_FACTURADO		INT, 
MONTO_TOTAL_FACTURADO	decimal (18,2),

PRIMARY KEY (ID_COMPRA_FECHA, ID_FACTURA_FECHA, SUCURSAL_ID, TIPO_HABITACION_CODIGO, CLIENTE_ID, PROVEEDOR_ID),

FOREIGN KEY (ID_COMPRA_FECHA)			REFERENCES NAME_IS_NULL.D_FECHA_COMPRA,
FOREIGN KEY (ID_FACTURA_FECHA)			REFERENCES NAME_IS_NULL.D_FECHA_FACTURACION,
FOREIGN KEY (SUCURSAL_ID)				REFERENCES NAME_IS_NULL.D_SUCURSAL,
FOREIGN KEY (TIPO_HABITACION_CODIGO)	REFERENCES NAME_IS_NULL.D_TIPO_DE_HABITACION,
FOREIGN KEY (CLIENTE_ID)				REFERENCES NAME_IS_NULL.D_CLIENTE,
FOREIGN KEY (PROVEEDOR_ID)				REFERENCES NAME_IS_NULL.D_PROVEEDOR
);
--FIN CREACION DE TABLA DE HECHOS PASAJES

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--INICIO CREACION TABLA DE HECHOS PASAJES

IF OBJECT_ID ('NAME_IS_NULL.FACT_TABLE_PASAJES', 'U') IS NOT NULL  
   DROP TABLE NAME_IS_NULL.FACT_TABLE_PASAJES; 
GO

CREATE TABLE NAME_IS_NULL.FACT_TABLE_PASAJES(
ID_COMPRA_FECHA			DATETIME2(3),
ID_FACTURA_FECHA		DATETIME2(3),
SUCURSAL_ID				INT,
CIUDAD_ENTRANTE_ID		INT,
CIUDAD_SALIENTE_ID		INT,
CLIENTE_ID				INT,
ID_TIPO_DE_BUTACA		INT,
RUTA_AEREA_ID			INT,
AVION_IDENTIFICADOR		NVARCHAR(50),
PROVEEDOR_ID			INT,
CANTIDAD_COMPRADO		INT,
MONTO_TOTAL_COMPRADO	decimal (18,2),
CANTIDAD_FACTURADO		INT, 
MONTO_TOTAL_FACTURADO	decimal (18,2),

PRIMARY KEY (ID_COMPRA_FECHA, ID_FACTURA_FECHA, SUCURSAL_ID, CIUDAD_ENTRANTE_ID, CIUDAD_SALIENTE_ID,
			 CLIENTE_ID, ID_TIPO_DE_BUTACA, RUTA_AEREA_ID, AVION_IDENTIFICADOR, 
			 PROVEEDOR_ID),

FOREIGN KEY (ID_COMPRA_FECHA)			REFERENCES NAME_IS_NULL.D_FECHA_COMPRA,
FOREIGN KEY (ID_FACTURA_FECHA)			REFERENCES NAME_IS_NULL.D_FECHA_FACTURACION,
FOREIGN KEY (SUCURSAL_ID)				REFERENCES NAME_IS_NULL.D_SUCURSAL,
FOREIGN KEY (CIUDAD_ENTRANTE_ID)		REFERENCES NAME_IS_NULL.D_CIUDAD_ENTRANTE,
FOREIGN KEY (CIUDAD_SALIENTE_ID)		REFERENCES NAME_IS_NULL.D_CIUDAD_SALIENTE,
FOREIGN KEY (CLIENTE_ID)				REFERENCES NAME_IS_NULL.D_CLIENTE,
FOREIGN KEY (ID_TIPO_DE_BUTACA)			REFERENCES NAME_IS_NULL.D_TIPO_DE_BUTACA,
FOREIGN KEY (RUTA_AEREA_ID)				REFERENCES NAME_IS_NULL.D_RUTA_AEREA,
FOREIGN KEY (AVION_IDENTIFICADOR)		REFERENCES NAME_IS_NULL.D_AVION,
FOREIGN KEY (PROVEEDOR_ID)				REFERENCES NAME_IS_NULL.D_PROVEEDOR
);

--FIN CREACION DE TABLA DE HECHOS PASAJES

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--INICIO CARGA TABLA DE HECHOS ESTADIAS

INSERT INTO NAME_IS_NULL.FACT_TABLE_ESTADIAS
SELECT CM.COMPRA_FECHA, F.FACTURA_FECHA , DS.SUCURSAL_ID SUCURSAL_ID, 
	   TH.TIPO_HABITACION_CODIGO, C.CLIENTE_ID, DP.PROVEEDOR_ID, COUNT(I.ITEM_NUMERO) CANTIDAD_COMPRADO,
	   SUM(I.ITEM_COSTO) MONTO_TOTAL_COMPRADO, COUNT(F.FACTURA_NUMERO) CANTIDAD_FACTURADO, 
	   SUM(F.FACTURA_PRECIO) MONTO_TOTAL_FACTURADO
FROM NAME_IS_NULL.FACTURA F JOIN NAME_IS_NULL.CLIENTE C ON (F.CLIENTE_ID = C.CLIENTE_ID)
							JOIN NAME_IS_NULL.SUCURSAL S ON (F.SUCURSAL_MAIL = S.SUCURSAL_MAIL)
							JOIN NAME_IS_NULL.ESTADIA E ON (F.ESTADIA_CODIGO = E.ESTADIA_CODIGO)
							JOIN NAME_IS_NULL.ITEM I ON (E.ESTADIA_CODIGO = I.ESTADIA_CODIGO)
							JOIN NAME_IS_NULL.COMPRA CM ON (I.COMPRA_NUMERO = CM.COMPRA_NUMERO)
							JOIN NAME_IS_NULL.HOTEL H ON (E.HOTEL_CODIGO = H.HOTEL_CODIGO)
							JOIN NAME_IS_NULL.HABITACION HAB ON (E.HOTEL_CODIGO = HAB.HOTEL_CODIGO AND E.HABITACION_NUMERO = HAB.HABITACION_NUMERO)
							JOIN NAME_IS_NULL.TIPO_HABITACION TH ON (TH.TIPO_HABITACION_CODIGO = HAB.TIPO_HABITACION_CODIGO)
							JOIN NAME_IS_NULL.D_PROVEEDOR DP ON (DP.NOMBRE_PROVEEDOR = H.HOTEL_NOMBRE)
							JOIN NAME_IS_NULL.D_SUCURSAL DS ON (DS.SUCURSAL_MAIL = S.SUCURSAL_MAIL)
GROUP BY CM.COMPRA_FECHA, F.FACTURA_FECHA , DS.SUCURSAL_ID, TH.TIPO_HABITACION_CODIGO, C.CLIENTE_ID, DP.PROVEEDOR_ID

--FIN CARGA TABLA DE HECHOS ESTADIAS

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--INICIO CARGA TABLA DE HECHOS PASAJES

INSERT INTO NAME_IS_NULL.FACT_TABLE_PASAJES
SELECT CM.COMPRA_FECHA, F.FACTURA_FECHA, DS.SUCURSAL_ID SUCURSAL_ID, DCE.CIUDAD_ENTRANTE_ID CIUDAD_ENTRANTE,
	   DCS.CIUDAD_SALIENTE_ID CIUDAD_SALIENTE, C.CLIENTE_ID, DTB.ID_TIPO_DE_BUTACA, RA.RUTA_AEREA_ID,
	   A.AVION_IDENTIFICADOR, DP.PROVEEDOR_ID, COUNT(I.ITEM_NUMERO) CANTIDAD_COMPRADO,
	   SUM(I.ITEM_COSTO) MONTO_TOTAL_COMPRADO, COUNT(F.FACTURA_NUMERO) CANTIDAD_FACTURADO, 
	   SUM(F.FACTURA_PRECIO) MONTO_TOTAL_FACTURADO
FROM NAME_IS_NULL.FACTURA F JOIN NAME_IS_NULL.CLIENTE C ON (F.CLIENTE_ID = C.CLIENTE_ID)
							JOIN NAME_IS_NULL.SUCURSAL S ON (F.SUCURSAL_MAIL = S.SUCURSAL_MAIL)
							JOIN NAME_IS_NULL.PASAJE P ON (F.PASAJE_CODIGO = P.PASAJE_CODIGO)
							JOIN NAME_IS_NULL.ITEM I ON (P.PASAJE_CODIGO = I.PASAJE_CODIGO)
							JOIN NAME_IS_NULL.COMPRA CM ON (I.COMPRA_NUMERO = CM.COMPRA_NUMERO)
							JOIN NAME_IS_NULL.BUTACA B ON (P.BUTACA_NUMERO = B.BUTACA_NUMERO AND P.VUELO_CODIGO = B.VUELO_CODIGO)
							JOIN NAME_IS_NULL.VUELO V ON (P.VUELO_CODIGO = V.VUELO_CODIGO)
							JOIN NAME_IS_NULL.AVION A ON (V.AVION_IDENTIFICADOR = A.AVION_IDENTIFICADOR)
							JOIN NAME_IS_NULL.AEROLINEA AE ON (V.AEROLINEA_CODIGO = AE.AEROLINEA_CODIGO)
							JOIN NAME_IS_NULL.RUTA_AEREA RA ON (V.RUTA_AEREA_ID = RA.RUTA_AEREA_ID)
							JOIN NAME_IS_NULL.D_PROVEEDOR DP ON (AE.AEROLINEA_NOMBRE = DP.NOMBRE_PROVEEDOR)
							JOIN NAME_IS_NULL.D_SUCURSAL DS ON (DS.SUCURSAL_MAIL = S.SUCURSAL_MAIL)
							JOIN NAME_IS_NULL.D_TIPO_DE_BUTACA DTB ON (DTB.BUTACA_TIPO = B.BUTACA_TIPO AND DTB.VUELO_CODIGO = V.VUELO_CODIGO)
							JOIN NAME_IS_NULL.D_CIUDAD_ENTRANTE DCE ON (DCE.CIUDAD_NOMBRE = RA.RUTA_AEREA_CIUD_DESTINO)
							JOIN NAME_IS_NULL.D_CIUDAD_SALIENTE DCS ON (DCS.CIUDAD_NOMBRE = RA.RUTA_AEREA_CIUD_ORIGEN)
GROUP BY CM.COMPRA_FECHA, F.FACTURA_FECHA, DS.SUCURSAL_ID, DCE.CIUDAD_ENTRANTE_ID, DCS.CIUDAD_SALIENTE_ID,
		 C.CLIENTE_ID, DTB.ID_TIPO_DE_BUTACA, RA.RUTA_AEREA_ID, A.AVION_IDENTIFICADOR, DP.PROVEEDOR_ID

--FIN CARGA TABLA DE HECHOS PASAJES

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

--VISTAS EJEMPLO

IF OBJECT_ID ('NAME_IS_NULL.V_ESTADIAS_VENDIDAS', 'V') IS NOT NULL  
   DROP VIEW NAME_IS_NULL.V_ESTADIAS_VENDIDAS; 
GO

CREATE VIEW NAME_IS_NULL.V_ESTADIAS_VENDIDAS
	(Hotel, Tipo_Habitacion, Cantidad_Camas, Estadias_Vendidas, Compra_Total, Venta_Total, Ganancia_Total, Precio_Compra_Promedio, Precio_Venta_Promedio, Ganancia_Promedio)
AS
SELECT f.proveedor_id, f.tipo_habitacion_codigo, t.cantidad_camas, count(*), sum(f.monto_total_comprado), sum(f.monto_total_facturado), sum(f.monto_total_facturado - f.monto_total_comprado), avg(f.monto_total_comprado), avg(f.monto_total_facturado), avg(f.monto_total_facturado)-avg(f.monto_total_comprado)
FROM  NAME_IS_NULL.FACT_TABLE_ESTADIAS f
	join name_is_null.d_tipo_de_habitacion t on (f.tipo_habitacion_codigo = t.tipo_habitacion_codigo)
GROUP BY f.proveedor_id, f.tipo_habitacion_codigo, t.cantidad_camas
WITH CHECK OPTION
GO

--------------------------------------

IF OBJECT_ID ('NAME_IS_NULL.V_PASAJES_VENDIDOS', 'V') IS NOT NULL  
   DROP VIEW NAME_IS_NULL.V_PASAJES_VENDIDOS; 
GO

CREATE VIEW NAME_IS_NULL.V_PASAJES_VENDIDOS
	(Aerolinea, Tipo_Butaca, Cantidad_Vendidas, Compra_Total, Venta_Total, Ganancia_Total, Precio_Compra_Promedio, Precio_Venta_Promedio, Ganancia_Promedio)
AS
SELECT proveedor_id, id_tipo_de_butaca, count(*), sum(monto_total_comprado), sum(monto_total_facturado), sum(monto_total_facturado - monto_total_comprado), avg(monto_total_comprado), avg(monto_total_facturado), avg(monto_total_facturado)-avg(monto_total_comprado)
FROM NAME_IS_NULL.FACT_TABLE_PASAJES
GROUP BY proveedor_id, id_tipo_de_butaca
WITH CHECK OPTION
GO
